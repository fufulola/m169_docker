# Utiliser l'image officielle de scratch comme base
FROM scratch

# Ajouter le système de fichiers de base d'Alpine Linux
ADD source/alpine-minirootfs-3.15.2-x86_64.tar.gz /

# Installer les paquets nécessaires pour PHP et Apache
RUN apk update && \
    apk add --no-cache apache2 apache2-utils apache2-ssl apache2-http2 php8 php8-apache2 php8-mysqli php8-curl php8-gd php8-json php8-mbstring php8-openssl php8-session php8-simplexml php8-xml php8-zip && \
    rm -rf /var/cache/apk/*

# Copier les fichiers de configuration pour Apache, PHP et WordPress
COPY config/httpd.conf /etc/apache2/httpd.conf
COPY config/php.ini /etc/php8/php.ini
# COPY config/wp-config.php /var/www/html/wp-config.php

# Créer le répertoire manquant pour la clé privée
RUN mkdir -p /etc/ssl/private

# Copier la clé privée et le certificat auto-signé dans les répertoires correspondants
COPY config/server.crt /etc/ssl/certs/
COPY config/server.key /etc/ssl/private/

# Télécharger et installer WordPress
ADD https://wordpress.org/latest.tar.gz /var/www/localhost/htdocs/
RUN tar -xzvf /var/www/localhost/htdocs/latest.tar.gz -C /var/www/localhost/htdocs --strip-components=1 && \
    rm /var/www/localhost/htdocs/latest.tar.gz

# Définir les permissions pour les fichiers WordPress
RUN chown -R apache:apache /var/www/localhost/htdocs/ && \
    chmod -R 755 /var/www/localhost/htdocs/

# Définir les permissions pour les fichiers de log et de pid d'Apache
RUN chown -R apache:apache /var/run/apache2 /var/log/apache2 && \
    chmod 755 /var/run/apache2 /var/log/apache2

# Ajouter le script de démarrage personnalisé
COPY scripts/start-wordpress.sh /usr/local/bin/start-wordpress.sh
RUN chmod +x /usr/local/bin/start-wordpress.sh

# Exposer le port 80 et 443 pour accéder au site WordPress
EXPOSE 80
EXPOSE 443

# Définir un utilisateur et un groupe pour exécuter les commandes
USER apache:apache

# Démarrer Apache en tant que processus principal du conteneur
CMD ["/usr/local/bin/start-wordpress.sh"]